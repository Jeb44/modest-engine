{
	// ===== C++ =====
	"Insert Assertion":{
		"scope": "cpp",
		"prefix": "cpp: assert",
		"body": [
			"ASSERT(${1:expression});",
			"$2"
		],
		"description": "Check the expression for boolean value. If false, break the programm!"
	},

	"iostream cout":{
		"scope": "cpp",
		"prefix": "cpp: iostream cout",
		"body":[
			"std::cout << \"$1\" << std::endl;",
			"$2"
		],
		"description": "Log output to console"
	},

	"New header file (class)":{
		"scope": "cpp",
		"prefix": "cpp: new header",
		"body":[
			"//${1:NewClass}.h",
			"#pragma once",
			"",
			"class ${1:NewClass} {",
				"public:",
				"\texplicit ${1:NewClass}();",
				"\tvirtual ~${1:NewClass}();",
				"\t",
				"\t$2",
				"private:",
				"\t",
			"};"
		],
		"description": "Create header file layout for a new class"
	},

	"New source file (class)":{
		"scope": "cpp",
		"prefix": "cpp: new source",
		"body":[
			"//${1:NewClass}.cpp",
			"#include \"${1:NewClass}.h\"",
			"",
			"${1:NewClass}::${1:NewClass}() {}",
			"${1:NewClass}::~${1:NewClass}() {}",
			"",
			"$2"
		],
		"description": "Create source file layout for a new class"
	},

	"Get console (service locator)":{
		"scope": "cpp",
		"prefix": "cpp: get console",
		"body":[
			""
		],
		"description": "Create source file layout for a new class"
	},

	//===== CMAKE SNIPPETS =====
	"New CMakeList.txt file":{
		"prefix": "cmake: new CMakeList.txt file",
		"body":[
			"# CMakeList.txt",
			"# Add this directory to target_include_directories",
			"list (APPEND EXTRA_INCLUDES \"$\\{PROJECT_SOURCE_DIR\\}/engine/src/${1:...}\")",
			"",
			"# Add files to target_sources here:",
			"target_sources(modest-engine)",
			"\tPRIVATE",
			"\t\t$\\{PROJECT_SOURCE_DIR\\}/engine/src/${1:...}/${2:...}",
			")",
			"",
			"# Add another sub_directory (which calls another CMakeLists.txt)",
			"add_subdirectory($\\{PROJECT_SOURCE_DIR\\}/engine/src/${1:...}/${3:...})"
		],
		"description": "Create CMakeList.txt for a subdirectory"
	}

}